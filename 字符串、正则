字符串截取及切割
子串截取的三种用法：
${var:起始位置:长度}
使用${}方式截取字符串时，起始位置是从0开始的（和数组下标编号类似）
expr substr "$var" 起始位置 长度
echo $var | cut -b 起始位置-结束位置
路径分割：
取目录位置：dirname "字符串"
取文档的基本名称：basename "字符串"
子串替换的两种用法：
只替换第一个匹配结果：${var/old/new}
替换全部匹配结果：${var//old/new}
字符串掐头去尾：
从左向右，最短匹配删除：${变量名#*关键词}
从左向右，最长匹配删除：${变量名##*关键词}
从右向左，最短匹配删除：${变量名%关键词*}
从右向左，最长匹配删除：${变量名%%关键词*}

批量修改当前目录下的文件扩展名，将.doc改为.txt。
脚本内容参考如下：
[root@svr5 ~]# vim renfile.sh
#!/bin/bash
for FILE in *.doc                 （.doc可以换成任何变量，可以用变量表示）
do
    mv $FILE  ${FILE%.doc}.txt     （.txt同上）
done
#########################################################################################################
字符串初值的处理
只取值，${var:-word}
若变量var已存在且非Null，则返回 $var 的值；否则返回字串“word”，原变量var的值不受影响。
[root@svr5 ~]# echo ${XX:-Tarena}      //因XX已存在，输出变量XX的值
[root@svr5 ~]# echo ${YY:-Tarena}      //因YY不存在，输出“Tarena”
